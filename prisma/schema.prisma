generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]        
  Sender   Conversation[] @relation("sender_id")
  Receiver Conversation[] @relation("receiver_id")
  messages  Message[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
// model User {
//   id       Int            @id @default(autoincrement())
//   name     String?
//   email    String?         
//   password String?
//   Sender   Conversation[] @relation("sender_id")
//   Receiver Conversation[] @relation("receiver_id")
//   messages  Message[]
// }

model Categories {
  id       Int     @id @default(autoincrement())
  category String?
}

model Listings {
  id          Int     @id @default(autoincrement())
  user_id     Int
  category_id Int?
  title       String?
  description String?
  img_src     String?
  start_date  String?
  end_date    String?
  postal_code String?
}

model Biddings {
  id         Int @id @default(autoincrement())
  user_id    Int
  listing_id Int
}

model Winners {
  id         Int @id @default(autoincrement())
  user_id    Int
  listing_id Int
}

model Conversation {
  id          Int       @id @default(autoincrement())
  sender_id   String
  receiver_id String
  sender      User      @relation(name: "sender_id", fields: [sender_id], references: [id])
  receiver    User      @relation(name: "receiver_id", fields: [receiver_id], references: [id])
  messages    Message[]
}

model Message {
  id              Int          @id @default(autoincrement())
  content         String
  timestamp       DateTime     @default(now())
  sender_id       String
  User            User         @relation(fields: [sender_id], references: [id])
  conversation_id Int
  Conversation    Conversation @relation(fields: [conversation_id], references: [id])

}